//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartAnalyzers.MultithreadingAnalyzer.Test.LockObjectSelection {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TestCases {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TestCases() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SmartAnalyzers.MultithreadingAnalyzer.Test.LockObjectSelection.TestCases", typeof(TestCases).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Threading;
        ///
        ///namespace SmartAnalyzers.MultithreadingAnalyzer.Test.LockObjectSelection.TestData
        ///{
        ///    class _001_LockOnNonReadonlyField
        ///    {
        ///        private object lockobj = new object();
        ///
        ///        public void DoSth1()
        ///        {
        ///            lock (lockobj)
        ///            {
        ///            }
        ///        }
        ///
        ///        public void DoSth2()
        ///        {
        ///            Monitor.Enter(lockobj);
        ///            Monitor.Exit(lockobj);
        ///        }
        ///
        ///        public void DoSth3()
        ///        {
        ///            var wasTake [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string _001_LockOnNonReadonlyField {
            get {
                return ResourceManager.GetString("_001_LockOnNonReadonlyField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Threading;
        ///
        ///namespace SmartAnalyzers.MultithreadingAnalyzer.Test.LockObjectSelection.TestData
        ///{
        ///    class _002_LockOnNonReadonlyProperty
        ///    {
        ///        private object LockObj { get; set; } = new object();
        ///
        ///        public void DoSth1()
        ///        {
        ///            lock (LockObj)
        ///            {
        ///            }
        ///        }
        ///
        ///        public void DoSth2()
        ///        {
        ///            Monitor.Enter(LockObj);
        ///            Monitor.Exit(LockObj);
        ///        }
        ///
        ///        public void DoSth3()
        ///        {
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string _002_LockOnNonReadonlyProperty {
            get {
                return ResourceManager.GetString("_002_LockOnNonReadonlyProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Threading;
        ///
        ///namespace SmartAnalyzers.MultithreadingAnalyzer.Test.LockObjectSelection.TestData
        ///{
        ///    class _003_LockOnPublicField
        ///    {
        ///        public object lockobj = new object();
        ///
        ///        public void DoSth1()
        ///        {
        ///            lock (lockobj)
        ///            {
        ///            }
        ///        }
        ///
        ///        public void DoSth2()
        ///        {
        ///            Monitor.Enter(lockobj);
        ///            Monitor.Exit(lockobj);
        ///        }
        ///
        ///        public void DoSth3()
        ///        {
        ///            var wasTaken = fa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string _003_LockOnPublicField {
            get {
                return ResourceManager.GetString("_003_LockOnPublicField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Threading;
        ///
        ///namespace SmartAnalyzers.MultithreadingAnalyzer.Test.LockObjectSelection.TestData
        ///{
        ///    class _004_LockOnPublicProperty
        ///    {
        ///        public object LockObj { get; set; } = new object();
        ///
        ///        public void DoSth1()
        ///        {
        ///            lock (LockObj)
        ///            {
        ///            }
        ///        }
        ///
        ///        public void DoSth2()
        ///        {
        ///            Monitor.Enter(LockObj);
        ///            Monitor.Exit(LockObj);
        ///        }
        ///
        ///        public void DoSth3()
        ///        {
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string _004_LockOnPublicProperty {
            get {
                return ResourceManager.GetString("_004_LockOnPublicProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Runtime.CompilerServices;
        ///using System.Threading;
        ///
        ///namespace SmartAnalyzers.MultithreadingAnalyzer.Test.LockObjectSelection.TestData
        ///{
        ///    class _005_LockOnThisInstance
        ///    {
        ///        public void DoSth1()
        ///        {
        ///            Monitor.Enter(this);
        ///            Monitor.Exit(this);
        ///        }
        ///
        ///        public void DoSth2()
        ///        {
        ///            var wasTaken = false;
        ///            Monitor.TryEnter(this, ref wasTaken);
        ///            if (wasTaken)
        ///            {
        ///                Monitor.Exi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string _005_LockOnThisInstance {
            get {
                return ResourceManager.GetString("_005_LockOnThisInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Threading;
        ///
        ///namespace SmartAnalyzers.MultithreadingAnalyzer.Test.LockObjectSelection.TestData
        ///{
        ///    struct MyStruct
        ///    {
        ///        public int SampleProp { get; set; }
        ///    }
        ///
        ///    class _006_LockOnValueType
        ///    {
        ///        private MyStruct lockObj = new MyStruct();
        ///
        ///        public void DoSth1()
        ///        {
        ///            Monitor.Enter(lockObj);
        ///            Monitor.Exit(lockObj);
        ///        }
        ///
        ///        public void DoSth2()
        ///        {
        ///            var wasTaken = false;
        ///            Monitor.T [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string _006_LockOnValueType {
            get {
                return ResourceManager.GetString("_006_LockOnValueType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Threading;
        ///
        ///namespace SmartAnalyzers.MultithreadingAnalyzer.Test.LockObjectSelection.TestData
        ///{
        ///    class _007_LockOnObjectWithWeakIdentity
        ///    {
        ///        private readonly Type lockType = typeof(_007_LockOnObjectWithWeakIdentity);
        ///
        ///        public void DoSth1()
        ///        {
        ///            lock (lockType)
        ///            {
        ///
        ///            }
        ///        }
        ///
        ///        public void DoSth2()
        ///        {
        ///            lock (typeof(_007_LockOnObjectWithWeakIdentity))
        ///            {
        ///
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string _007_LockOnObjectWithWeakIdentity {
            get {
                return ResourceManager.GetString("_007_LockOnObjectWithWeakIdentity", resourceCulture);
            }
        }
    }
}
